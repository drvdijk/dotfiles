# -*- mode: sh -*-

#
# Executes commands at the start of an interactive session.
#
# Author:
#   Nathan Houle <nathan@nathanhoule.com>
#
# Credit to:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Zach Holman <zach@zachholman.com>
#

LC_CTYPE=en_US.UTF-8
LC_ALL=en_US.UTF-8

export DOTFILES=$HOME/.dotfiles


#
# zplug
#

# Install if not already installed
source ~/.zplug/init.zsh || { curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh && source ~/.zplug/init.zsh }

# Previously using prezto setup, but zplug is easier to list which plugins are loaded.
# Still want to use some of those modules though, but the general idea is to use as little of them as possible.
# This is the list that was used before switching to zplug
#
# zplug "modules/environment", from:prezto
# zplug "modules/terminal", from:prezto
zplug "modules/editor", from:prezto
zplug "modules/history", from:prezto
# zplug "modules/directory", from:prezto
# zplug "modules/spectrum", from:prezto
zplug "modules/utility", from:prezto
zplug "modules/git", from:prezto
# zplug "modules/completion", from:prezto
# zplug "modules/syntax-highlighting", from:prezto # uses git submodule, load through zsh-users instead
# zplug "modules/history-substring-search", from:prezto
zplug "modules/prompt", from:prezto
zstyle ':prezto:module:prompt' theme 'sorin'


# Non-prezto plugins

zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-autosuggestions" # slows down terminal ..
zplug "zsh-users/zsh-syntax-highlighting",      defer:2
zplug "zsh-users/zsh-history-substring-search", defer:3

zplug 'djui/alias-tips'
zplug 'xvoland/Extract', use:'*.sh'
zplug 'supercrabtree/k'

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
   printf "Install? [y/N]: "
   if read -q; then
       echo; zplug install
   else
       echo
   fi
fi

zplug load

if zplug check zsh-users/zsh-history-substring-search; then
  if [[ -n "$key_info" ]]; then
    # Emacs and Vi
    for keymap in 'emacs' 'viins'; do
      bindkey -M "$keymap" "$key_info[Up]" history-substring-search-up
      bindkey -M "$keymap" "$key_info[Down]" history-substring-search-down
    done
    unset keymap
  fi
fi

# zstyle for completion system, copied from prezto module, commented as much as possible
zstyle ':completion:*:*:*:*:*' menu select
# zstyle ':completion:*:matches' group 'yes'
# zstyle ':completion:*:options' description 'yes'
# zstyle ':completion:*:options' auto-description '%d'
# zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
# zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
# zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
# zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
# zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
# zstyle ':completion:*' group-name ''
# zstyle ':completion:*' verbose yes





# IGNORE: This is a zgen playground, in the hope to improve terminal speed a bit
# #
# # zgen
# #
# # 
# source "${HOME}/.zgen/zgen.zsh" || { git clone https://github.com/tarjoilija/zgen.git "${HOME}/.zgen" && source "${HOME}/.zgen/zgen.zsh" }
# 
# # if the init scipt doesn't exist
# if ! zgen saved; then
# 
#   # # prezto options
#   # # zgen prezto editor key-bindings 'emacs'
#   # zgen prezto prompt theme 'sorin'
#   # 
#   # # specify plugins here
#   # # zgen prezto # this loads the full prezto setup ...
#   # zgen prezto editor
#   # zgen prezto history
#   # zgen prezto utility
#   # zgen prezto git
#   # zgen prezto prompt
#   # 
#   # generate the init script from plugins above
#   zgen save
# fi






# # IGNORE: This is a zgen playground, in the hope to improve terminal speed a bit
# #
# # Antigen
# #
# 
# source "${HOME}/.antigen/antigen.zsh" || { git clone https://github.com/zsh-users/antigen.git "${HOME}/.antigen" && source "${HOME}/.antigen/antigen.zsh" }
# # Tell antigen that you're done.
# antigen apply

#
# Zsh submodules
#

# All zsh config files (all *.zsh files contained in $DOTFILES children
# directories). Note that this glob is limited to one directory level deep.
typeset -U config_files
config_files=($DOTFILES/*/*.zsh)

# Load path files
for file in ${(M)config_files:#*/path.zsh}; do
  source $file
done

# Load all files except for path and completions
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
  source $file
done

# Load completions
for file in ${(M)config_files:#*/completion.zsh}; do
  source $file
done

# Cleanup
unset config_files


# Load tmux
#[[ $SHLVL == "1" ]] && tmux new
